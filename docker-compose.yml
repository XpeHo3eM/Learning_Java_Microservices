version: '1.0'

services:
  db_orders_postgres:
    image: postgres:14.18
    container_name: db_orders_postgres
    ports:
      - "5435:5432"
    environment:
      POSTGRES_DB: orders_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres

  db_notifications_postgres:
    image: postgres:14.18
    container_name: db_notifications_postgres
    ports:
      - "5434:5432"
    environment:
      POSTGRES_DB: notifications_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres

  zookeeper:
    image: confluentinc/cp-zookeeper
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2182:2182"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2182
      ZOOKEEPER_TICK_TIME: 2000

  broker_1:
    image: confluentinc/cp-kafka
    hostname: broker_1
    container_name: broker_1
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2182'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker_1:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0

  broker_2:
    image: confluentinc/cp-kafka
    hostname: broker_2
    container_name: broker_2
    depends_on:
      - zookeeper
    ports:
      - "29093:29092"
      - "9093:9093"
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2182'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker_2:29093,PLAINTEXT_HOST://localhost:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0

  gateway:
    build: gateway/
    container_name: gateway
    ports:
      - "8080:8080"

  order-service:
    build: order-service/
    container_name: order-service
    ports:
      - "8081:8080"
    depends_on:
      - db_orders_postgres
      - broker_1
      - broker_2
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db_orders_postgres:5432/orders_db
      KAFKA_BOOTSTRAP_SERVER: broker_1:29092,broker_2:29093

  notification-service:
    build: notification-service/
    container_name: notification-service
    ports:
      - "8082:8080"
    depends_on:
      - db_notifications_postgres
      - broker_1
      - broker_2
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db_notifications_postgres:5432/notifications_db
      KAFKA_BOOTSTRAP_SERVER: broker_1:29092,broker_2:29093